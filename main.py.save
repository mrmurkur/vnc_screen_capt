#!/usr/bin/python3

import cv2
import numpy as np
import subprocess
import os, shutil
import 

work_dir = "/home/milov/vnc_screen_capt/pict/"

subprocess.call(['bash', '/home/milov/vnc_screen_capt/vnc_vld_suo.sh'])

def find_image(im, tpl):
    im = np.atleast_3d(im)
    tpl = np.atleast_3d(tpl)
    H, W, D = im.shape[:3]
    h, w = tpl.shape[:2]

    # Integral image and template sum per channel
    sat = im.cumsum(1).cumsum(0)
    tplsum = np.array([tpl[:, :, i].sum() for i in range(D)])

    # Calculate lookup table for all the possible windows
    iA, iB, iC, iD = sat[:-h, :-w], sat[:-h, w:], sat[h:, :-w], sat[h:, w:]
    lookup = iD - iB - iC + iA

  # Possible matches
    possible_match = np.where(np.logical_and.reduce([lookup[..., i] == tplsum[i] for i in range(D)]))
  # Find exact match

    for y, x in zip(*possible_match):
        if np.all(im[y+1:y+h+1, x+1:x+w+1] == tpl):
            return (y+1, x+1)

  # raise Exception("Image not found")
tpl = cv2.imread('service_regime.png', 1)
for filename in os.listdir(work_dir):
    if filename.endswith(".png"):
        im = cv2.imread(work_dir + filename, 1)

        try:
            y, x = find_image(im, tpl)
            print(filename)
        except:
            print("Image not found")
        shutil.move(work_dir+filename, work_dir + 'moved/'+filename)
